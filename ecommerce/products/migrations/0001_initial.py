# Generated by Django 3.2 on 2023-03-06 08:12

from django.db import migrations, models
import django.db.models.deletion
import products.models.category
import products.models.product


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image', models.ImageField(upload_to=products.models.category.company_image)),
                ('catregory_order', models.PositiveBigIntegerField(default=10)),
                ('live', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=10000)),
                ('main_image', models.ImageField(upload_to=products.models.product.product_image)),
                ('image_1', models.ImageField(blank=True, null=True, upload_to=products.models.product.product_image)),
                ('image_2', models.ImageField(blank=True, null=True, upload_to=products.models.product.product_image)),
                ('image_3', models.ImageField(blank=True, null=True, upload_to=products.models.product.product_image)),
                ('small_available', models.BooleanField(default=False, verbose_name='Customers can buy small unit?')),
                ('big_unit', models.CharField(max_length=100, verbose_name='Big unit name')),
                ('big_unit_price', models.FloatField(default=0, verbose_name='Big unit price')),
                ('big_unit_price_discount', models.FloatField(blank=True, null=True, verbose_name='Discount price for big unit')),
                ('big_unit_discount_max_quantity', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Max quantity user have to buy if there is a discount on Big unit')),
                ('small_unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Small unit name')),
                ('small_unit_price', models.FloatField(blank=True, null=True, verbose_name='Small unit price')),
                ('small_unit_price_discount', models.FloatField(blank=True, null=True, verbose_name='Discount price for small unit')),
                ('small_unit_discount_max_quantity', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Max quantity user have to buy if there is a discount on Small Unit')),
                ('big_unit_items', models.PositiveIntegerField(blank=True, null=True, verbose_name='Items in each big unit')),
                ('item_weight', models.IntegerField()),
                ('weight_type', models.CharField(choices=[('جرام', 'جرام'), ('كيلوجرام', 'كيلوجرام'), ('مل', 'مل'), ('لتر', 'لتر')], default='جرام', max_length=50)),
                ('live', models.BooleanField(default=True)),
                ('in_stock_items', models.PositiveIntegerField(blank=True, null=True)),
                ('ordered_times', models.PositiveBigIntegerField(default=0)),
                ('product_order', models.PositiveBigIntegerField(default=100)),
                ('big_unit_max_quantity', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Max quantity if there is no discount for big unit')),
                ('small_unit_max_quantity', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Max quantity if there is no discount for small unit')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
        ),
    ]
